// @bun
import{Buffer as m}from"buffer";var c=32;var f=async(r)=>{let e=new TextEncoder().encode(r),o=await crypto.subtle.digest("SHA-256",e);return z(o)},k=(r)=>()=>{let e=crypto.getRandomValues(new Uint8Array(r));return z(e)},P=k(c),E=k(c),z=(r)=>{let e=r instanceof Uint8Array?r:new Uint8Array(r),o="";for(let h of e)o+=String.fromCharCode(h);let n;if(typeof btoa==="function")n=btoa(o);else if(typeof m!=="undefined")n=m.from(e).toString("base64");else throw new Error("No Base64 encoder available");return n.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")},d=(r,e)=>{let o=new TextEncoder().encode(e.toString()),n=new Request(r,{body:o,method:"POST"});return n.headers.set("Content-Type","application/x-www-form-urlencoded"),n.headers.set("Accept","application/json"),n.headers.set("User-Agent","citra"),n.headers.set("Content-Length",o.byteLength.toString()),n},U=async(r)=>{try{let e=await fetch(r);if(!e.ok)throw new Error(`Token request failed: ${e.status} ${e.statusText}`);return await e.json()}catch(e){if(e instanceof Error)throw new Error(`${e.message} - ${e.stack??""}`);throw new Error(`Unexpected error: ${e}`)}},R=async(r)=>{let e;try{e=await fetch(r)}catch(o){if(o instanceof Error)throw new Error(`${o.message} - ${o.stack??""}`);throw new Error(`Unexpected error: ${o}`)}if(!e.ok)throw new Error(`Token revocation failed: ${e.status} ${e.statusText}`)};var y=(r)=>r,C=y({"42":{authorizationUrl:"https://api.intra.42.fr/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://api.intra.42.fr/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},AmazonCognito:{authorizationUrl:"https://${domain}/oauth2/authorize",isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenRevocationUrl:"https://${domain}/oauth2/revoke",tokenUrl:"https://${domain}/oauth2/token"},AniList:{authorizationUrl:"https://anilist.co/api/v2/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",body:{query:"query { Viewer { id name } }"},headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",url:"https://graphql.anilist.co"},tokenUrl:"https://anilist.co/api/v2/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Apple:{authorizationUrl:"https://appleid.apple.com/auth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenUrl:"https://appleid.apple.com/auth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Atlassian:{authorizationUrl:"https://auth.atlassian.com/authorize",createAuthorizationURLSearchParams:{audience:"api.atlassian.com",prompt:"consent"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.atlassian.com/me"},refreshAccessTokenBody:{grant_type:"refresh_token"},tokenUrl:"https://auth.atlassian.com/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Auth0:{authorizationUrl:"https://${domain}/authorize",isOIDC:!0,isPKCE:!0,isRefreshable:!0,refreshAccessTokenBody:{grant_type:"refresh_token"},tokenRevocationBody:{token_type_hint:"refresh_token"},tokenRevocationUrl:"https://${domain}/oauth/revoke",tokenUrl:"https://${domain}/oauth/token"},Authentik:{authorizationUrl:"https://${baseURL}/oauth/authorize",isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenUrl:"https://${baseURL}/oauth/token"},Autodesk:{authorizationUrl:"https://developer.api.autodesk.com/authentication/v1/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://developer.api.autodesk.com/authentication/v1/gettoken",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Battlenet:{authorizationUrl:"https://oauth.battle.net/authorize",createAuthorizationURLSearchParams:{response_type:"code",scope:"openid"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://oauth.battle.net/userinfo"},tokenUrl:"https://oauth.battle.net/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Bitbucket:{authorizationUrl:"https://bitbucket.org/site/oauth2/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.bitbucket.org/2.0/user"},tokenUrl:"https://bitbucket.org/site/oauth2/access_token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Box:{authorizationUrl:"https://account.box.com/api/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.box.com/2.0/users/me"},tokenRevocationUrl:"https://api.box.com/oauth2/revoke",tokenUrl:"https://api.box.com/oauth2/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Bungie:{authorizationUrl:"https://www.bungie.net/en/OAuth/Authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",headers:{"X-API-Key":"<YOUR_API_KEY>"},method:"GET",url:"https://www.bungie.net/Platform/User/GetCurrentBungieNetUser"},tokenUrl:"https://www.bungie.net/platform/app/oauth/token/"},Coinbase:{authorizationUrl:"https://www.coinbase.com/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.coinbase.com/v2/user"},tokenUrl:"https://api.coinbase.com/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Discord:{authorizationUrl:"https://discord.com/api/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://discord.com/api/users/@me"},tokenUrl:"https://discord.com/api/oauth2/token"},DonationAlerts:{authorizationUrl:"https://www.donationalerts.com/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://www.donationalerts.com/api/v1/user"},tokenUrl:"https://www.donationalerts.com/oauth/token"},Dribbble:{authorizationUrl:"https://dribbble.com/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!1,profileRequest:{authIn:"header",method:"GET",url:"https://api.dribbble.com/v2/user"},tokenUrl:"https://dribbble.com/oauth/token"},Dropbox:{authorizationUrl:"https://www.dropbox.com/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.dropboxapi.com/2/users/get_current_account"},tokenRevocationUrl:" https://api.dropboxapi.com/2/auth/token/revoke",tokenUrl:"https://api.dropboxapi.com/oauth2/token"},EpicGames:{authorizationUrl:"https://www.epicgames.com/id/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.epicgames.dev/epic/oauth/v2/userInfo"},tokenUrl:"https://api.epicgames.dev/epic/oauth/v1/token"},Etsy:{authorizationUrl:"https://www.etsy.com/oauth/connect",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://openapi.etsy.com/v3/application/users/me"},tokenUrl:"https://api.etsy.com/v3/public/oauth/token"},Facebook:{authorizationUrl:"https://www.facebook.com/v16.0/dialog/oauth",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!1,profileRequest:{authIn:"query",method:"GET",searchParams:[["fields","id,name,email,picture"]],url:"https://graph.facebook.com/me"},tokenUrl:"https://graph.facebook.com/v16.0/oauth/access_token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Figma:{authorizationUrl:"https://www.figma.com/oauth",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.figma.com/v1/me"},tokenUrl:"https://api.figma.com/v1/oauth/token"},Gitea:{authorizationUrl:"${baseURL}/login/oauth/authorize",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://<YOUR_GITEA_DOMAIN>/api/v1/user"},tokenUrl:"${baseURL}/login/oauth/access_token"},GitHub:{authorizationUrl:"https://github.com/login/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.github.com/user"},tokenUrl:"https://github.com/login/oauth/access_token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},GitLab:{authorizationUrl:"${baseURL}/oauth/authorize",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://gitlab.com/api/v4/user"},tokenRevocationUrl:"${baseURL}/oauth/revoke",tokenUrl:"${baseURL}/oauth/token"},Google:{authorizationUrl:"https://accounts.google.com/o/oauth2/v2/auth",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenRevocationUrl:"https://oauth2.googleapis.com/revoke",tokenUrl:"https://oauth2.googleapis.com/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Intuit:{authorizationUrl:"https://appcenter.intuit.com/connect/oauth2",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://oauth.platform.intuit.com/oauth2/v1/userinfo"},tokenRevocationUrl:"https://developer.API.intuit.com/v2/oauth2/tokens/revoke",tokenUrl:"https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer"},Kakao:{authorizationUrl:"https://kauth.kakao.com/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://kapi.kakao.com/v2/user/me"},tokenUrl:"https://kauth.kakao.com/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},KeyCloak:{authorizationUrl:"${realmURL}/protocol/openid-connect/auth",isOIDC:!0,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.kick.com/v1/user"},tokenRevocationUrl:"${realmURL}/protocol/openid-connect/revoke",tokenUrl:"${realmURL}/protocol/openid-connect/token"},Kick:{authorizationUrl:"https://id.kick.com/oauth/authorize",createAuthorizationURLSearchParams:{code_challenge_method:"S256",response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,tokenRevocationUrl:"https://id.kick.com/oauth/revoke",tokenUrl:"https://id.kick.com/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Lichess:{authorizationUrl:"https://lichess.org/oauth",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://lichess.org/api/account"},tokenUrl:"https://lichess.org/api/token"},Line:{authorizationUrl:"https://access.line.me/oauth2/v2.1/authorize",createAuthorizationURLSearchParams:{code_challenge_method:"S256",response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.line.me/v2/profile"},refreshAccessTokenBody:{grant_type:"refresh_token"},tokenUrl:"https://api.line.me/oauth2/v2.1/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Linear:{authorizationUrl:"https://linear.app/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",body:{query:"query { viewer { id name } }"},headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",url:"https://api.linear.app/graphql"},tokenUrl:"https://api.linear.app/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},LinkedIn:{authorizationUrl:"https://www.linkedin.com/oauth/v2/authorization",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://www.linkedin.com/oauth/v2/accessToken",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Mastodon:{authorizationUrl:"${baseURL}/api/v1/oauth/authorize",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://<YOUR_INSTANCE>/api/v1/accounts/verify_credentials"},tokenRevocationUrl:"${baseURL}/api/v1/oauth/revoke",tokenUrl:"${baseURL}/api/v1/oauth/token"},MercadoLibre:{authorizationUrl:"https://auth.mercadolibre.com/authorization",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.mercadolibre.com/users/me"},tokenUrl:"https://api.mercadolibre.com/oauth/token"},MercadoPago:{authorizationUrl:"https://auth.mercadopago.com/authorization",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.mercadopago.com/v1/users/me"},tokenUrl:"https://api.mercadopago.com/oauth/token"},MicrosoftEntraId:{authorizationUrl:"https://${tenantId}.b2clogin.com/${tenantId}/oauth2/v2.0/authorize",isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenUrl:"https://${tenantId}.b2clogin.com/${tenantId}/oauth2/v2.0/token"},MyAnimeList:{authorizationUrl:"https://myanimelist.net/v1/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.myanimelist.net/v2/users/@me"},tokenUrl:"https://myanimelist.net/v1/oauth2/token"},Naver:{authorizationUrl:"https://nid.naver.com/oauth2.0/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://openapi.naver.com/v1/nid/me"},tokenUrl:"https://nid.naver.com/oauth2.0/token"},Notion:{authorizationUrl:"https://api.notion.com/v1/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.notion.com/v1/users/me"},tokenUrl:"https://api.notion.com/v1/oauth/token"},Okta:{authorizationUrl:"https://${domain}/oauth2/default/v1/authorize",isOIDC:!0,isPKCE:!0,isRefreshable:!0,tokenRevocationUrl:"https://${domain}/oauth2/default/v1/revoke",tokenUrl:"https://${domain}/oauth2/default/v1/token"},Osu:{authorizationUrl:"https://osu.ppy.sh/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://osu.ppy.sh/api/v2/me"},tokenUrl:"https://osu.ppy.sh/oauth/token"},Patreon:{authorizationUrl:"https://www.patreon.com/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://www.patreon.com/api/oauth2/v2/identity"},tokenUrl:"https://www.patreon.com/api/oauth2/token"},Polar:{authorizationUrl:"https://flow.polar.com/oauth2/authorization",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://www.polaraccesslink.com/v3/users/<USER_ID>"},tokenUrl:"https://polarremote.com/oauth2/token"},Reddit:{authorizationUrl:"https://www.reddit.com/api/v1/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://oauth.reddit.com/api/v1/me"},tokenUrl:"https://www.reddit.com/api/v1/access_token"},Roblox:{authorizationUrl:"https://www.roblox.com/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://apis.roblox.com/oauth/v1/userinfo"},tokenUrl:"https://oauth.roblox.com/v1/token"},Salesforce:{authorizationUrl:"https://login.salesforce.com/services/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://login.salesforce.com/services/oauth2/token"},Shikimori:{authorizationUrl:"https://shikimori.org/oauth/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://shikimori.one/api/users/whoami"},tokenUrl:"https://shikimori.org/oauth/token"},Slack:{authorizationUrl:"https://slack.com/openid/connect/authorize",isOIDC:!0,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"query",method:"GET",url:"https://slack.com/api/users.identity"},tokenUrl:"https://slack.com/api/openid.connect.token"},Spotify:{authorizationUrl:"https://accounts.spotify.com/authorize",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.spotify.com/v1/me"},tokenUrl:"https://accounts.spotify.com/api/token"},StartGG:{authorizationUrl:"https://start.gg/oauth/authoriz",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",body:{query:"query { currentUser { id slug email player { gamerTag } } }"},headers:{Accept:"application/json","Content-Type":"application/json"},method:"POST",url:"https://api.start.gg/gql/alpha"},tokenUrl:"https://api.start.gg/oauth/access_token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Strava:{authorizationUrl:"https://www.strava.com/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://www.strava.com/api/v3/athlete"},tokenUrl:"https://www.strava.com/api/v3/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Synology:{authorizationUrl:"${baseURL}/webman/sso/SSOOauth.cgi",isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://<YOUR_DOMAIN>/webman/sso/SSOUserInfo.cgi"},tokenUrl:"${baseURL}/webman/sso/SSOAccessToken.cgi"},TikTok:{authorizationUrl:"https://www.tiktok.com/v2/auth/authorize",createAuthorizationURLSearchParams:{code_challenge_method:"S256",response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"query",method:"GET",url:"https://open.douyin.com/oauth/userinfo"},tokenRevocationUrl:"https://open.tiktokapis.com/v2/oauth/revoke/",tokenUrl:"https://open.tiktokapis.com/v2/oauth/token/",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Tiltify:{authorizationUrl:"https://v5api.tiltify.com/oauth/authorizeze",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://tiltify.com/api/v3/me"},tokenUrl:"https://v5api.tiltify.com/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Tumblr:{authorizationUrl:"https://www.tumblr.com/oauth2/authorize",isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.tumblr.com/v2/user/info"},tokenUrl:"https://api.tumblr.com/v2/oauth2/token"},Twitch:{authorizationUrl:"https://id.twitch.tv/oauth2/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.twitch.tv/helix/users"},tokenUrl:"https://id.twitch.tv/oauth2/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Twitter:{authorizationUrl:"https://twitter.com/i/oauth2/authorize",createAuthorizationURLSearchParams:{code_challenge_method:"S256",response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.twitter.com/2/users/me"},refreshAccessTokenBody:{grant_type:"refresh_token"},tokenUrl:"https://api.twitter.com/2/oauth2/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},VK:{authorizationUrl:"https://oauth.vk.com/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,profileRequest:{authIn:"query",method:"GET",url:"https://api.vk.com/method/users.get"},tokenUrl:"https://oauth.vk.com/access_token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},WorkOS:{authorizationUrl:"https://api.workos.com/sso/authorize",createAuthorizationURLSearchParams:{code_challenge_method:"S256",response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,tokenUrl:"https://api.workos.com/sso/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Yahoo:{authorizationUrl:"https://api.login.yahoo.com/oauth2/request_auth",isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://api.login.yahoo.com/oauth2/get_token"},Yandex:{authorizationUrl:"https://oauth.yandex.com/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!1,isRefreshable:!0,tokenUrl:"https://oauth.yandex.com/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}},Zoom:{authorizationUrl:"https://zoom.us/oauth/authorize",createAuthorizationURLSearchParams:{response_type:"code"},isOIDC:!1,isPKCE:!0,isRefreshable:!0,profileRequest:{authIn:"header",method:"GET",url:"https://api.zoom.us/v2/users/me"},refreshAccessTokenBody:{grant_type:"refresh_token"},tokenRevocationUrl:"https://zoom.us/oauth/revoke",tokenUrl:"https://zoom.us/oauth/token",validateAuthorizationCodeBody:{grant_type:"authorization_code"}}});var T=(r,e)=>{let o=C[r],n=async(h,t)=>{let i=d(h,t);return U(i)};return{async createAuthorizationUrl(h){let{state:t,scope:i=[],searchParams:a=[],codeVerifier:u}=h??{},s=new URL(o.authorizationUrl);if(s.searchParams.set("response_type","code"),s.searchParams.set("client_id",e.clientId),e.redirectUri)s.searchParams.set("redirect_uri",e.redirectUri);if(t)s.searchParams.set("state",t);if(i.length)s.searchParams.set("scope",i.join(" "));if(o.isPKCE){let l=u??(()=>{throw new Error("`codeVerifier` is required when `meta.isPKCE` is true")})();s.searchParams.set("code_challenge_method","S256"),s.searchParams.set("code_challenge",await f(l))}return Object.entries(o.createAuthorizationURLSearchParams||{}).forEach(([l,p])=>s.searchParams.set(l,p)),a.forEach(([l,p])=>s.searchParams.set(l,p)),s},async fetchUserProfile(h){let{profileRequest:t}=o;if(!t)throw new Error("User profile request is not defined for this provider");let{url:i}=t,{method:a}=t,u={};if(t.authIn==="header")u.Authorization=`Bearer ${h}`;else{let v=i.includes("?")?"&":"?";i=`${i}${v}access_token=${encodeURIComponent(h)}`}let s={headers:u,method:a};if(a==="POST"&&t.body)u["Content-Type"]="application/json",s.body=JSON.stringify(t.body);let l=await fetch(i,s),p=await l.clone().text();if(!l.ok)throw new Error(`Failed to fetch user profile: ${l.status} ${l.statusText} - ${p}`);return l.json()},refreshAccessToken(h){let t=new URLSearchParams;if(t.set("grant_type","refresh_token"),t.set("refresh_token",h),Object.entries(o.refreshAccessTokenBody??{}).forEach(([i,a])=>t.set(i,a)),"clientSecret"in e&&e.clientSecret)t.set("client_id",e.clientId),t.set("client_secret",e.clientSecret);return n(o.tokenUrl,t)},revokeToken(h){if(!o.tokenRevocationUrl)throw new Error("Token revocation URL is not defined for this provider");let t=new URLSearchParams;if(t.set("token",h),Object.entries(o.tokenRevocationBody??{}).forEach(([a,u])=>t.set(a,u)),t.set("client_id",e.clientId),"clientSecret"in e&&e.clientSecret)t.set("client_secret",e.clientSecret);let i=d(o.tokenRevocationUrl,t);return R(i)},validateAuthorizationCode(h){let{code:t,codeVerifier:i}=h,a=new URLSearchParams;if(a.set("grant_type","authorization_code"),a.set("code",t),e.redirectUri)a.set("redirect_uri",e.redirectUri);if(Object.entries(o.validateAuthorizationCodeBody||{}).forEach(([u,s])=>a.set(u,s)),"clientSecret"in e&&e.clientSecret)a.set("client_id",e.clientId),a.set("client_secret",e.clientSecret);else a.set("client_id",e.clientId);if(o.isPKCE){let u=i??(()=>{throw new Error("`codeVerifier` is required when `meta.isPKCE` is true")})();a.set("code_verifier",u)}return n(o.tokenUrl,a)}}};export{T as createOAuth2Client};
